name: ci

on:
  push:
    branches:
    - main
    - release/**
  pull_request:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      CARGO_INCREMENTAL: 0
      CARGO_TERM_COLOR: always
      RUSTFLAGS: "-D warnings"
    steps:
    - name: Get OS version
      id: os-version
      run: echo "release=$(lsb_release --release --short)" >> $GITHUB_OUTPUT
    - name: Checkout
      uses: actions/checkout@v5
    - name: Setup Java
      uses: actions/setup-java@v5
      with:
        distribution: temurin
        java-version: "17"
        check-latest: false
    - name: Install NDK
      run: |
        mkdir -p "$HOME/.config/.android"
        NDK_VERSION=$(awk -F= '/ndkVersion/ { print $2 }' gradle.properties)
        sudo bash -c "echo y | ${ANDROID_HOME}/cmdline-tools/latest/bin/sdkmanager --install 'ndk;${NDK_VERSION}'"
    - name: Validate Gradle Wrapper
      uses: gradle/actions/wrapper-validation@v4
    - name: Setup Gradle
      uses: gradle/actions/setup-gradle@v4
      with:
        dependency-graph: generate-and-submit
    - name: Setup Rust
      id: rust-toolchain
      uses: dtolnay/rust-toolchain@stable
      with:
        targets: aarch64-linux-android,armv7-linux-androideabi,i686-linux-android,x86_64-linux-android
        components: clippy, rustfmt
    - name: Install cargo-binstall
      uses: cargo-bins/cargo-binstall@v1.15.5
    - name: Install bindgen-cli
      run: cargo binstall bindgen-cli -y
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    - name: Rust caching
      uses: Swatinem/rust-cache@v2
      with:
        key: "${{ steps.os-version.outputs.release }}-${{ steps.rust-toolchain.outputs.cachekey }}"
        workspaces: divviup/rust
    - name: Rust format
      working-directory: divviup/rust
      run: cargo fmt --message-format human -- --check
    - name: Rust lint
      working-directory: divviup/rust
      run: cargo clippy
    - name: Build and test
      run: ./gradlew build generateReleaseJavadoc

  dependency-review:
    if: github.event_name == 'pull_request'
    needs: build
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v5
    - name: Dependency review
      uses: actions/dependency-review-action@v4
      with:
        config-file: './.github/dependency-review-config.yml'
        allow-ghsas: GHSA-735f-pc8j-v9w8  # This is for a protobuf-java DoS vulnerability. This is only used in tests, and is thus not relevant.
